name: CI

env:
  BUILD_CONFIGURATION: Release
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check GCC version
      shell: bash
      run: gcc --version
    - name: Get dependencies
      shell: bash
      run: sudo apt-get install x11-xserver-utils libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev gcc make g++ libxmu-dev libxi-dev libgl-dev libglu1-mesa-dev libvulkan1 mesa-vulkan-drivers vulkan-utils libvulkan-dev libasound2-dev libflac-dev libogg-dev libtool libvorbis-dev libopus-dev libsndfile1-dev libglew-dev
    - name: Checkout submodules
      shell: bash
      run: |
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Make Project
      shell: bash
      run: ./autosetupci.sh
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      run: |
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    #- name: Check Program Files
    #  run: ls "C:/Program Files (x86)/Microsoft Visual Studio/2019/"
    - name: Set MSBuild env
      run: set PATH="%PATH%;C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/amd64"
    - name: Make
      run: bash autosetupci.sh
  #Windows:
  #  runs-on: windows-latest
  #  steps:
  #  - uses: actions/checkout@v2
  #  - name: Checkout submodules
  #    run: |
  #        git submodule sync --recursive
  #        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
  #  - name: Compile GLEW
  #    run: cd Engine/ThirdParty/glew/auto/ && mingw32-make && cd ../ && mingw32-make install && cd ../../../ && dir
  #  - name: Create project
  #    run: git clone https://github.com/MadLadSquad/UVKSampleProject.git && dir
  #  - name: Extract project
  #    run: xcopy /i /e /c /k /y /r UVKSampleProject .  
  #  - name: Generated generated files
  #    run: mkdir Generated && cd UVKBuildTool/ && mkdir build && cd build && cmake -G "Unix Makefiles" .. && mingw32-make && dir && ./UVKBuildTool.exe --install
  #  - name: Make build directory and cmake
  #    run: ls && mkdir build && cd build && cmake .. -G "Unix Makefiles" && mingw32-make
  #Mac: 
  #  runs-on: macos-latest
  #  steps:
  #  - uses: actions/checkout@v2
  #  - name: Check GCC version
  #    shell: bash
  #    run: ls /usr/local/Cellar/libsndfile/*/lib/
  #  - name: Get dependencies
  #    shell: bash
  #    run: brew install glfw glew gcc libsndfile
  #  - name: Checkout submodules
  #    shell: bash
  #    run: |
  #        git submodule sync --recursive
  #        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
  #  - name: Generated generated files
  #    shell: bash
  #    run: ./autosetup.sh && cp /usr/local/Cellar/libsndfile/*/include/sndfile.h Engine/ThirdParty/ && cp /usr/local/Cellar/libsndfile/*/lib/libsndfile.* Engine/ThirdParty/glew/lib/
  #  - name: Make build directory and cmake
  #    shell: bash
  #    run: ls Engine/ThirdParty/glew/include && cd build && cmake .. -G "Unix Makefiles" && make
